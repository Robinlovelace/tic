% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gh-actions.R
\name{gha_add_secret}
\alias{gha_add_secret}
\title{Add a GitHub Actions secret to a repository}
\usage{
gha_add_secret(
  secret,
  name,
  repo_slug = NULL,
  remote = "origin",
  visibility = "all",
  selected_repositories = NULL
)
}
\arguments{
\item{secret}{\verb{[character]}\cr
The value which should be encrypted (e.g. a Personal Access Token).}

\item{name}{\verb{[character]}\cr
The name of the secret as which it will appear in the "Secrets" overview of
the repository.}

\item{repo_slug}{\verb{[character]}\cr
Repository slug of the repository to which the secret should be added.
Must follow the form \code{owner/repo}.}

\item{remote}{\verb{[character]}\cr
If \code{repo_slug = NULL}, the \code{repo_slug} is determined by the respective git
remote.}

\item{visibility}{\verb{[character]}\cr
The level of visibility for the secret. One of \code{"all"}, \code{"private"}, or
\code{"selected"}.
See https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret
for more information.}

\item{selected_repositories}{\verb{[character]}\cr
Vector of repository ids for which the secret is accessible.
Only applies if \code{visibility = "selected"} was set.}
}
\description{
Encrypts the supplied value using \code{libsodium} and adds it as a
secret to the given GitHub repository. Secrets can be be used in GitHub
Action runs as environment variables.
A common use case is to encrypt Personal Access Tokens (PAT) or API keys.

This is the same as adding a secret manually in GitHub via
\code{"Settings" -> "Secrets" -> "New repository secret"}
}
\examples{
\dontrun{
gha_add_secret("supersecret", name = "MY_SECRET", repo = "ropensci/tic")
}

}
